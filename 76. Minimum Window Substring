class Solution:
    def minWindow(self, s: str, t: str) -> str:
        if t == "": return ""
        
        countT, window = {}, {}
        countT = Counter(t)

        have, need = 0, len(countT)

        res, reslen = [-1, -1], float("inf")
        l = 0
        for r, c in enumerate(s):
            window[c] = window.get(c, 0) + 1
            if c in countT and window[c] == countT[c]:
                have +=1
            while have == need:
                if (r-l+1) < reslen:
                    res = [l, r]
                    reslen = (r-l+1)
                window[s[l]] -=1
                if s[l] in countT and window[s[l]] < countT[s[l]]:
                    have -=1
                l+=1

        l ,r = res
        return s[l:r+1] if reslen != float("inf") else ""
